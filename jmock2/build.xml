<project name="jMock 2" default="build">
	<property name="version" value="2-SNAPSHOT"/>
	<property name="distdir" value="build/jmock-${version}"/>

	<path id="build.classpath">
		<fileset dir="lib" includes="*.jar" excludes="*-src.jar"/>
	</path>

	<target name="build"
		description="Builds everything from scratch"
		depends="clean, zip.jars, zip.javadoc"/>

	<target name="clean" 
			description="Removes all build artefacts">
		<delete dir="build"/>
	</target>

	<target name="zip.javadoc" depends="javadoc">
		<zip destfile="build/jmock-${version}-javadoc.zip"
			 basedir="build"
		     compress="false">
			<include name="jmock-${version}/doc/**"/>
		</zip>
	</target>
	
	<target name="zip.jars" depends="build.jars, zip.gather">
		<zip destfile="build/jmock-${version}-jars.zip" compress="true">
			<fileset dir="build">
				<include name="jmock-${version}/*"/>
				<exclude name="jmock-${version}/doc"/>
			</fileset>
		</zip>
	</target>
	
	<target name="zip.gather" depends="dir.dist">
		<copy todir="${distdir}">
			<fileset dir="lib">
				<include name="hamcrest-*.jar"/>
			</fileset>
			<fileset dir=".">
				<include name="LICENSE.txt"/>
				<include name="README"/>
			</fileset>
		</copy>
	</target>

	<target name="compile" depends="dir.build">
		<mkdir dir="build/classes" />
		<javac classpathref="build.classpath" 
			   destdir="build/classes"
			   srcdir="."
			   sourcepath="src;test"
			   debug="yes"
			   failonerror="yes"
			   source="1.5" 
			   target="1.5"
			   excludes="testdata/**"/>
	</target>

	<target name="dir.build">
		<mkdir dir="build"/>
	</target>

	<target name="dir.dist" depends="dir.build">
		<mkdir dir="${distdir}"/>
	</target>

	<target name="build.jars" 
		    depends="jar.api, jar.junit3, jar.junit4"/>

	<target name="jar.api" depends="compile, run.tests, dir.dist">
		<jar destfile="${distdir}/jmock-${version}.jar" compress="false">
			<fileset dir="build/classes">
				<exclude name="testdata/**"/>
				<exclude name="org/jmock/lib/nonstd/**"/>
				<exclude name="org/jmock/integration/**"/>
				<exclude name="org/jmock/test/**"/>
			</fileset>
			<fileset dir="src">
				<exclude name="org/jmock/lib/nonstd/**"/>
				<exclude name="org/jmock/integration/**"/>
				<exclude name="org/jmock/test/**"/>
				<exclude name="**/*.html"/>
			</fileset>
		</jar>
	</target>

	<target name="jar.junit3" depends="compile, run.tests, dir.dist">
		<jar destfile="${distdir}/jmock-junit3-${version}.jar"
	     	 compress="false">

			<fileset dir="build/classes">
				<include name="org/jmock/integration/junit3/**"/>
			</fileset>

			<fileset dir="src">
				<include name="org/jmock/integration/junit3/**"/>
				<exclude name="**/*.html"/>
			</fileset>
		</jar>
	</target>

	<target name="jar.junit4" depends="compile, run.tests, dir.dist">
		<jar destfile="${distdir}/jmock-junit4-${version}.jar"
	     	 compress="false">

			<fileset dir="build/classes">
				<include name="org/jmock/integration/junit4/**"/>
			</fileset>

			<fileset dir="src">
				<include name="org/jmock/integration/junit4/**"/>
				<exclude name="**/*.html"/>
			</fileset>
		</jar>
	</target>
	
	<target name="jar.nonstd" depends="compile, run.tests"
		    description="Builds a JAR containing the non-standard library classes that are not distributed in a jMock release">
		<jar destfile="build/jmock-nonstd-${version}.jar" compress="false">
			<fileset dir="build/classes">
				<include name="org/jmock/lib/nonstd/**"/>
			</fileset>
			
			<fileset dir="src">
				<include name="org/jmock/lib/nonstd/**"/>
				<exclude name="**/*.html"/>
			</fileset>
		</jar>
	</target>
	
	<target name="testdata" depends="testdata.signed-jar"/>
	
	<target name="testdata.signed-jar">
		<mkdir dir="build/testdata"/>
		<mkdir dir="build/testdata/classes"/>
		
		<javac destdir="build/testdata/classes"
		       srcdir="testdata"
			   debug="yes"
			   failonerror="yes"
		       source="1.5" 
		       target="1.5"/>
		
		<jar destfile="build/testdata/signed.jar" compress="false">
			<fileset dir="build/testdata/classes/" includes="*"/>
		</jar>
		
		<delete dir="build/testdata/classes"/>
		
		<genkey alias="testdata" 
				keystore="build/testdata/keystore" storepass="testdata"
				dname="CN=Test Data, OU=Test Data, O=Test Data, C=UL"/>
		
		<signjar jar="build/testdata/signed.jar" alias="testdata" 
			     keystore="build/testdata/keystore" storepass="testdata"/>
	</target>
	
	<target name="javadoc" depends="dir.dist">
		<mkdir dir="build/extract/hamcrest-api"/>
		<unzip src="lib/hamcrest-api-1.0.jar" dest="build/extract/hamcrest-api"/>
		<unzip src="lib/hamcrest-library-1.0.jar" dest="build/extract/hamcrest-api"/>

		<mkdir dir="${distdir}/doc"/>
		<javadoc destdir="${distdir}/doc" source="1.5" failonerror="yes"
			classpathref="build.classpath"
			overview="src/overview.html">

			<packageset dir="src">
				<exclude name="org/jmock/internal/**"/>
			</packageset>
			<packageset dir="build/extract/hamcrest-api">
				<exclude name="org/hamcrest/internal/**"/>
			</packageset>
			
			<group title="jMock 2" packages="org.jmock, org.jmock.*"/>
			<group title="Hamcrest API" packages="org.hamcrest"/>
			<group title="Hamcrest Matcher Library" packages="org.hamcrest.*"/>

			<link offline="false" href="http://java.sun.com/j2se/1.5.0/docs/api/"/>
			<link offline="false" href="http://www.junit.org/junit/javadoc/3.8.1/"/>
			<link offline="false" href="http://junit.sourceforge.net/javadoc_40/"/>
			<link offline="false" href="http://cglib.sourceforge.net/apidocs/"/>
		</javadoc>
	</target>

	<target name="run.tests" depends="compile, testdata">
		<property name="outdir" value="build/reports/tests"/>
		<mkdir dir="${outdir}"/>
		<junit fork="yes" forkmode="once" printsummary="no" haltonfailure="yes" showoutput="yes">
			<classpath>
				<path refid="build.classpath"/>
				<pathelement location="build/classes"/>
			</classpath>
			
			<formatter type="brief" usefile="no"/>
			
			<batchtest>
				<fileset dir="test">
					<include name="**/*Tests.java"/>
					<exclude name="**/Abstract*"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
</project>
