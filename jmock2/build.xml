<project name="jmock2" default="build">
	<property name="version" value="SNAPSHOT"/>
	
	<path id="build.classpath">
		<fileset dir="lib" includes="*.jar" excludes="*-src.jar"/>
	</path>
	
	<target name="build"
		description="Builds everything from scratch"
		depends="clean, build.jars, build.zip.javadoc"/>
	
	<target name="clean" 
			description="Removes all build artefacts">
		<delete dir="build"/>
	</target>
	
	<target name="build.compile" depends="build.dir">
		<mkdir dir="build/classes"/>
		<javac classpathref="build.classpath" 
			   destdir="build/classes"
			   srcdir="."
			   sourcepath="src;test"
			   debug="yes"
			   failonerror="yes"
			   source="1.5" 
			   target="1.5"/>
	</target>
	
	<target name="build.dir">
		<mkdir dir="build"/>
	</target>
	
	<target name="build.jars" 
		depends="build.jar.api, build.jar.junit3, build.jar.junit4, build.jar.nonstd"/>
	
	<target name="build.jar.api" depends="build.compile, run.tests">
		<jar destfile="build/jmock2-${version}.jar" 
			compress="false">
			
			<fileset dir="build/classes">
				<exclude name="org/jmock/lib/nonstd/**"/>
				<exclude name="org/jmock/integration/**"/>
				<exclude name="org/jmock/test/**"/>
			</fileset>
			<fileset dir="src">
				<exclude name="org/jmock/lib/nonstd/**"/>
				<exclude name="org/jmock/integration/**"/>
				<exclude name="org/jmock/test/**"/>
				<exclude name="**/*.html"/>
			</fileset>
		</jar>
	</target>

	<target name="build.jar.junit3" depends="build.compile, run.tests">
		<jar destfile="build/jmock2-junit3-${version}.jar"
	     	 compress="false">
			
			<fileset dir="build/classes">
				<include name="org/jmock/integration/junit3/**"/>
			</fileset>
			
			<fileset dir="src">
				<include name="org/jmock/integration/junit3/**"/>
				<exclude name="**/*.html"/>
			</fileset>
		</jar>
	</target>
	
	<target name="build.jar.junit4" depends="build.compile, run.tests">
		<jar destfile="build/jmock2-junit4-${version}.jar"
	     	 compress="false">
			
			<fileset dir="build/classes">
				<include name="org/jmock/integration/junit4/**"/>
			</fileset>
			
			<fileset dir="src">
				<include name="org/jmock/integration/junit4/**"/>
				<exclude name="**/*.html"/>
			</fileset>
		</jar>
	</target>
	
	<target name="build.jar.nonstd" depends="build.compile, run.tests">
		<jar destfile="build/jmock2-nonstd-${version}.jar"
	         compress="false">
			
			<fileset dir="build/classes">
				<include name="org/jmock/lib/nonstd/**"/>
			</fileset>
			
			<fileset dir="src">
				<include name="org/jmock/lib/nonstd/**"/>
				<exclude name="**/*.html"/>
			</fileset>
		</jar>
	</target>

	<target name="build.zip.javadoc" depends="build.javadoc">
		<zip destfile="build/jmock2-${version}-javadoc.zip"
			 basedir="build"
		     compress="false">
			<include name="javadoc/**"/>
		</zip>
	</target>
	
	<target name="build.javadoc" depends="build.dir">
		<mkdir dir="build/extract/hamcrest-api"/>
		<unzip src="lib/hamcrest-api-1.0.jar" dest="build/extract/hamcrest-api"/>
		<unzip src="lib/hamcrest-library-1.0.jar" dest="build/extract/hamcrest-api"/>
		
		<mkdir dir="build/javadoc"/>
		<javadoc destdir="build/javadoc" source="1.5" failonerror="yes"
			classpathref="build.classpath"
			overview="src/overview.html">
			
			<packageset dir="src">
				<exclude name="org/jmock/internal/**"/>
			</packageset>
			<packageset dir="build/extract/hamcrest-api"/>
			
			<group title="jMock 2" packages="org.jmock, org.jmock.*"/>
			<group title="Hamcrest API" packages="org.hamcrest"/>
			<group title="Hamcrest Matcher Library" packages="org.hamcrest.*"/>
			
			<link offline="false" href="http://java.sun.com/j2se/1.5.0/docs/api/"/>
			<link offline="false" href="http://www.junit.org/junit/javadoc/3.8.1/"/>
			<link offline="false" href="http://junit.sourceforge.net/javadoc_40/"/>
			<link offline="false" href="http://cglib.sourceforge.net/apidocs/"/>
		</javadoc>
	</target>
	
	<target name="run.tests" depends="build.compile">
		<property name="outdir" value="build/reports/tests"/>
		<mkdir dir="${outdir}"/>
		<junit fork="yes"  printsummary="no" haltonfailure="yes" showoutput="yes">
			<classpath>
				<path refid="build.classpath"/>
				<pathelement location="build/classes"/>
			</classpath>
			
			<formatter type="plain"/>
			<formatter type="xml"/>
			
			<batchtest todir="${outdir}"> 
				<fileset dir="test">
					<include name="**/*Tests.java"/>
					<exclude name="**/Abstract*"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
</project>
