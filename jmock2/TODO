Functionality
=============

- More syntactic sugar (matchers, actions) in OrderingConstraint

- APIs for flexible expectations.  E.g. of/allow/never(Matcher).method(Matcher).with(Matcher...).
  So can write "allow (anyObject).method(anyBeanGetter);

- wording of never/allow/ignore

- Comparable seems too complicated. Shouldn't it be a couple of subclasses?

- min/max invocation count seems too flexible. Hook them together with a message in a single call?

- restrict allow() to InAnyOrder()

- write a test for a()/an()

- pull out a cardinality constraint

Build
=====

- Run the unit and acceptance tests from the Ant build

- Publish snapshots somewhere
